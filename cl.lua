local SecureWhitelist = {}

local _a, _b, _c = "\26", "\17", "\23"
local _d, _e, _f = "\10", "\22", "\29"
local _g, _h, _i = "\29", "\20", "\3"
local _j, _k, _l = "\15", "\18", "\31"
local _m, _n, _o = "\13", "\24", "\29"
local _p, _q, _r = "\17", "\31", "\22"
local _s, _t, _u = "\3", "\16", "\24"
local _v, _w, _x = "\20", "\7", "\5"
local _y, _z, _aa = "\26", "\27", "\18"
local _ab, _ac, _ad = "\9", "\6", "\11"
local _ae, _af, _ag = "\1", "\13", "\19"
local _ah, _ai, _aj = "\19", "\0", "\6"
local _ak, _al, _am = "\12", "\7", "\25"
local _an, _ao, _ap = "\11", "\15", "\23"
local _aq, _ar, _as = "\22", "\25", "\5"
local _at, _au, _av = "\1", "\27", "\4"
local _aw, _ax, _ay = "\17", "\10", "\15"
local _az, _ba, _bb = "\2", "\22", "\15"
local _bc, _bd, _be = "\19", "\2", "\26"
local _bf, _bg, _bh = "\10", "\16", "\2"
local _bi, _bj, _bk = "\30", "\27", "\6"
local _bl, _bm, _bn = "\11", "\5", "\17"
local _bo, _bp, _bq = "\2", "\30", "\0"
local _br, _bs, _bt = "\9", "\5", "\25"
local _bu, _bv, _bw = "\17", "\19", "\12"
local _bx, _by, _bz = "\13", "\11", "\3"
local _ca, _cb, _cc = "\5", "\15", "\19"
local _cd, _ce, _cf = "\27", "\26", "\1"
local _cg, _ch, _ci = "\10", "\23", "\11"
local _cj, _ck, _cl = "\28", "\11", "\23"
local _cm, _cn, _co = "\3", "\21", "\12"
local _cp, _cq, _cr = "\7", "\5", "\9"

local function c(...)
    local args = {...}
    local result = ""
    for _, v in ipairs(args) do
        result = result .. v
    end
    return result
end

local secretKey = c(_ce, _cg, "\9", _ax, _y, "\3", _q, _ap, "\2", _bl, _ak, "\5", _bs, _bg)

local patterns = {
    c(_a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _aa, _ab, _ac, _ad, _ae, _af),
    c(_ag, _ah, _ai, _aj, _ak, _al, _am, _an, _ao, _ap, _aq, _ar, _as, _at, _au, _av, _aw, _ax, _ay, _az, _ba, _bb, _bc, _bd, _be, _bf, _bg, _bh, _bi, _bj, _bk, _bl),
    
    c("\5", "\17", "\2", "\30", "\0", "\9", "\5", "\25", "\17", "\19", "\12", "\13", "\11", "\3", "\5", "\15", "\19", "\27", "\26", "\1", "\10", "\23", "\11", "\28", "\11", "\23", "\3", "\21", "\12", "\7", "\5", "\9"),
    c("\19", "\19", "\8", "\4", "\25", "\16", "\24", "\15", "\23", "\31", "\24", "\30", "\14", "\8", "\31", "\0", "\19", "\4", "\19", "\3", "\11", "\21", "\5", "\30", "\1", "\14", "\14", "\11", "\3", "\17", "\5", "\14"),
    
    c("\5", "\27", "\19", "\0", "\27", "\6", "\11", "\4", "\14", "\30", "\23", "\13", "\17", "\6", "\28", "\15", "\19", "\1", "\24", "\4", "\17", "\10", "\12", "\28", "\20", "\28", "\24", "\21", "\20", "\12", "\2", "\2"),
    c("\17", "\9", "\14", "\2", "\7", "\10", "\12", "\11", "\29", "\19", "\25", "\25", "\17", "\8", "\19", "\22", "\16", "\8", "\27", "\11", "\3", "\17", "\17", "\15", "\4", "\21", "\19", "\26", "\4", "\9", "\1", "\12"),
    c("\3", "\1", "\12", "\15", "\14", "\16", "\1", "\11", "\19", "\8", "\5", "\25", "\11", "\19", "\6", "\2", "\16", "\4", "\18", "\15", "\5", "\25", "\21", "\5", "\17", "\5", "\29", "\30", "\14", "\12", "\7", "\17"),
    
    c("\3", "\11", "\17", "\27", "\7", "\10", "\26", "\14", "\0", "\17", "\16", "\30", "\5", "\7", "\2", "\11", "\3", "\19", "\8", "\8", "\31", "\0", "\6", "\1", "\21", "\4", "\24", "\9", "\4", "\27", "\18", "\15"),
    c("\19", "\5", "\2", "\27", "\2", "\23", "\8", "\8", "\27", "\13", "\6", "\21", "\14", "\0", "\2", "\6", "\19", "\9", "\23", "\0", "\29", "\0", "\19", "\15", "\19", "\1", "\11", "\27", "\18", "\11", "\17", "\1"),
    c("\5", "\1", "\8", "\6", "\22", "\4", "\24", "\9", "\29", "\2", "\21", "\6", "\14", "\6", "\4", "\4", "\3", "\8", "\4", "\5", "\20", "\28", "\27", "\18", "\12", "\24", "\26", "\1", "\4", "\0", "\7", "\4"),
    
    c("\12", "\27", "\9", "\14", "\22", "\24", "\2", "\2", "\18", "\19", "\7", "\9", "\15", "\10", "\17", "\30", "\28", "\11", "\19", "\15", "\27", "\25", "\11", "\24", "\0", "\7", "\16", "\24", "\14", "\8", "\2", "\2"),
    c("\4", "\17", "\4", "\21", "\23", "\13", "\11", "\21", "\11", "\31", "\26", "\27", "\5", "\9", "\18", "\0", "\16", "\18", "\25", "\3", "\11", "\21", "\15", "\21", "\17", "\14", "\29", "\21", "\23", "\8", "\6", "\4"),
    
    c("\22", "\21", "\13", "\21", "\11", "\4", "\28", "\8", "\30", "\27", "\23", "\1", "\14", "\21", "\25", "\9", "\16", "\10", "\15", "\2", "\28", "\17", "\13", "\24", "\8", "\24", "\24", "\4", "\16", "\11", "\7", "\3"),
    
    c("\5", "\5", "\10", "\4", "\28", "\27", "\18", "\14", "\18", "\15", "\4", "\25", "\14", "\10", "\0", "\20", "\25", "\6", "\17", "\30", "\5", "\28", "\17", "\24", "\12", "\27", "\29", "\0", "\20", "\8", "\3", "\0"),
    
    c("\3", "\1", "\6", "\26", "\17", "\14", "\24", "\14", "\13", "\8", "\6", "\11", "\15", "\3", "\0", "\13", "\3", "\31", "\11", "\11", "\31", "\21", "\27", "\19", "\9", "\23", "\24", "\31", "\10", "\28", "\3", "\11"),
    
    c("\12", "\27", "\9", "\14", "\22", "\24", "\2", "\2", "\18", "\19", "\7", "\9", "\15", "\10", "\17", "\30", "\28", "\11", "\19", "\15", "\27", "\25", "\11", "\24", "\0", "\7", "\16", "\24", "\14", "\8", "\2", "\2"),
    c("\4", "\0", "\27", "\17", "\14", "\18", "\30", "\4", "\28", "\19", "\7", "\17", "\5", "\16", "\28", "\25", "\3", "\20", "\16", "\11", "\27", "\16", "\26", "\18", "\11", "\12", "\23", "\5", "\25", "\5", "\8", "\17"),
    c("\22", "\0", "\13", "\15", "\25", "\18", "\0", "\24", "\13", "\11", "\25", "\0", "\15", "\25", "\16", "\4", "\19", "\16", "\24", "\2", "\3", "\31", "\5", "\15", "\4", "\24", "\13", "\0", "\5", "\25", "\1", "\29"),
    c("\5", "\4", "\4", "\19", "\5", "\0", "\22", "\11", "\22", "\27", "\14", "\9", "\14", "\6", "\17", "\10", "\19", "\16", "\24", "\0", "\16", "\19", "\0", "\22", "\26", "\27", "\12", "\10", "\15", "\5", "\14", "\16"),
    
    c("\5", "\5", "\16", "\3", "\27", "\25", "\15", "\5", "\13", "\27", "\18", "\12", "\14", "\12", "\28", "\17", "\25", "\6", "\16", "\21", "\15", "\26", "\15", "\27", "\4", "\29", "\14", "\26", "\11", "\3", "\7", "\14"),
    
    c("\2", "\14", "\27", "\24", "\22", "\4", "\10", "\4", "\18", "\23", "\17", "\1", "\15", "\10", "\11", "\12", "\23", "\6", "\18", "\14", "\17", "\31", "\24", "\0", "\6", "\5", "\24", "\13", "\11", "\16", "\2", "\4")
}

local function obfuscate(str, key)
    local result = ""
    for i = 1, #str do
        local char = string.byte(str, i)
        local keyChar = string.byte(key, (i % #key) + 1)
        result = result .. string.char(bit.bxor(char, keyChar))
    end
    return result
end

local whitelistSet = {}
for _, pattern in ipairs(patterns) do
    whitelistSet[pattern] = true
end

function SecureWhitelist.isWhitelisted(clientID)
    clientID = string.upper(clientID)
    clientID = string.gsub(clientID, "[-]", "")
    
    local obfuscatedInput = obfuscate(clientID, secretKey)
    
    return whitelistSet[obfuscatedInput] == true
end

return SecureWhitelist
